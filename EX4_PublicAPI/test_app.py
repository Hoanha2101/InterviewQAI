import pytest
import json
from app import app

@pytest.fixture
def client():
    with app.test_client() as client:
        yield client

def test_predict(client):
    # Test với hình ảnh giả
    response = client.post('/predict', json={
        'image': 'data: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'
    })
    data = json.loads(response.data)
    assert response.status_code == 200
    assert 'loss' in data
